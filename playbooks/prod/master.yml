---

- hosts: brewmaster-pi
  pre_tasks:
    - name: upgrade system
      become: true
      apt:
        update_cache: true
        upgrade: safe

    - name: dist upgrade
      become: true
      apt:
        upgrade: dist

    - name: install ansible dependencies
      become: true
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ ansible_dependencies }}"
  roles:
    - ansible-role-mqtt
    - ansible-role-docker
    - ansible-role-hotspot

- hosts: brewmaster-pi
  vars:
    timescaledb_docker_path: /opt/timescaledb-docker
    update_timescaledb_base_image: true
  pre_tasks:
    - name: timescaledb | git clone timescaledb docker repository
      become: true
      git:
        repo: "https://github.com/brewmajsters/timescaledb-docker"
        dest: "{{ timescaledb_docker_path }}"

    - name: retrieve latest version of the timescaledb
      shell: "git tag -l | tail -1"
      args:
        chdir: "{{ timescaledb_docker_path }}"
      register: timescaledb_docker_version

    - name: timescaledb | build timescaldb docker image
      become: true
      docker_image:
        pull: "{{ update_timescaledb_base_image }}"
        name: timescaledb
        tag: "{{ timescaledb_docker_version.stdout }}"
        path: "{{ timescaledb_docker_path }}"
        state: present

    - name: timescaledb | link latest image to new version
      become: true
      command: "docker image tag timescaledb:{{ timescaledb_docker_version.stdout }} timescaledb:latest"

    - name: timescaledb | run timescaldb docker container
      become: true
      docker_container:
        name: timescaledb
        image: "timescaledb:latest"
        state: started
        restart_policy: always  # starts the container always, when it fails
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /etc/timezone:/etc/timezone:ro
        ports:
          - 5432:5432
  roles:
    - ansible-role-brewmaster-backend
    - ansible-role-brewmaster-frontend
